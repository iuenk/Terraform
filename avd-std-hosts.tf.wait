locals {
  registration_token = azurerm_virtual_desktop_host_pool.avd_std_hostpool.registration_info[0].token
}

resource "azurerm_resource_group" "avd_host_resource_group" {
  location = var.deploy_location
  name     = upper("${var.Customer}${var.avd_std_vm_resource_group}")
}


resource "azurerm_availability_set" "avd_std_vm_availability_set" {
  name                = upper("${var.Customer}${var.avd_std_hostpool}-AS")
  location            = azurerm_resource_group.avd_host_resource_group.location
  resource_group_name = azurerm_resource_group.avd_host_resource_group.name

  #tags = {
  #  environment = "Production"
  #}
}

resource "azurerm_network_interface" "avd_std_vm_nic" {
  count               = var.avd_std_vm_count
  name                = lower("${var.Customer}${var.avd_std_prefix}-${count.index + 1}-nic")
  resource_group_name = azurerm_resource_group.avd_host_resource_group.name
  location            = azurerm_resource_group.avd_host_resource_group.location

  ip_configuration {
    name                          = "nic${count.index + 1}_config"
    subnet_id                     = azurerm_subnet.avd_sbnt.id
    private_ip_address_allocation = "dynamic"
  }
  dns_servers                   = ["10.1.1.4","10.1.1.5"]   #DNS van je DC's
  depends_on = [
    azurerm_resource_group.avd_host_resource_group
  ]
}

resource "azurerm_windows_virtual_machine" "avd_std_vm" {
  count                 = var.avd_std_vm_count
  name                  = "${var.Customer}${var.avd_std_prefix}-${count.index + 1}"
  resource_group_name   = upper("${var.Customer}${var.avd_std_vm_resource_group}")
  location              = var.deploy_location
  size                  = var.avd_std_vmsize
  network_interface_ids = ["${azurerm_network_interface.avd_std_vm_nic.*.id[count.index]}"]
  provision_vm_agent    = true
  admin_username        = var.local_admin_username
  admin_password        = data.azurerm_key_vault_secret.avd_admin_local_password.value
  availability_set_id   = azurerm_availability_set.avd_std_vm_availability_set.id
  os_disk {
    name                 = "${var.Customer}${var.avd_std_prefix}-${count.index + 1}-OSDisk"
    caching              = "ReadWrite"
    storage_account_type = "Standard_LRS"
  }

  source_image_reference {
   publisher = "MicrosoftWindowsDesktop"
    offer     = "office-365"
    sku       = "win10-21h2-avd-m365"
    version   = "latest"
  }

  # Of custom image  , zet dan 'source_image_reference' uit.
  #source_image_id = "/subscriptions/${data.azurerm_subscription.current.subscription_id}/resourceGroups/LANGO-AVD-RG/providers/Microsoft.Compute/galleries/${lower(var.Customer)}avdsig/images/${lower(var.Customer)}-avd-image"

  depends_on = [
    azurerm_resource_group.avd_host_resource_group,
    azurerm_network_interface.avd_std_vm_nic,
    azurerm_availability_set.avd_std_vm_availability_set
  ]
}

resource "azurerm_virtual_machine_extension" "domain_join" {
  count                      = var.avd_std_vm_count
  name                       = "${var.Customer}${var.avd_std_prefix}-${count.index + 1}-domainJoin"
  virtual_machine_id         = azurerm_windows_virtual_machine.avd_std_vm.*.id[count.index]
  publisher                  = "Microsoft.Compute"
  type                       = "JsonADDomainExtension"
  type_handler_version       = "1.3"
  auto_upgrade_minor_version = true

  settings = <<SETTINGS
    {
      "Name": "${var.domain_name}",
      "OUPath": "${var.avd_ou_path}",
      "User": "${var.domain_user_upn}@${var.domain_name}",
      "Restart": "true",
      "Options": "3"
    }
SETTINGS

  protected_settings = <<PROTECTED_SETTINGS
    {
      "Password": "${var.domain_password}"
    }
PROTECTED_SETTINGS

  lifecycle {
    ignore_changes = [settings, protected_settings]
  }
}

resource "azurerm_virtual_machine_extension" "vmext_dsc" {
  count                      = var.avd_std_vm_count
  name                       = "${var.Customer}${var.avd_std_prefix}-${count.index + 1}-avd_dsc"
  virtual_machine_id         = azurerm_windows_virtual_machine.avd_std_vm.*.id[count.index]
  publisher                  = "Microsoft.Powershell"
  type                       = "DSC"
  type_handler_version       = "2.83"
  auto_upgrade_minor_version = true

  settings = <<-SETTINGS
    {
      "modulesUrl": "https://wvdportalstorageblob.blob.core.windows.net/galleryartifacts/Configuration_3-10-2021.zip",
      "configurationFunction": "Configuration.ps1\\AddSessionHost",
      "properties": {
        "HostPoolName":"${azurerm_virtual_desktop_host_pool.avd_std_hostpool.name}"
      }
    }
SETTINGS

  protected_settings = <<PROTECTED_SETTINGS
  {
    "properties": {
      "registrationInfoToken": "${local.registration_token}"
    }
  }
PROTECTED_SETTINGS

  depends_on = [
    azurerm_virtual_machine_extension.domain_join,
    azurerm_virtual_desktop_host_pool.avd_std_hostpool
  ]
}

resource "azurerm_virtual_machine_extension" "mmaagent" {
  count                = var.avd_std_vm_count
  name                 = "${var.Customer}${var.avd_std_prefix}-${count.index + 1}-avd_mmaagent"
  virtual_machine_id   = azurerm_windows_virtual_machine.avd_std_vm.*.id[count.index]
  publisher            = "Microsoft.EnterpriseCloud.Monitoring"
  type                 = "MicrosoftMonitoringAgent"
  type_handler_version = "1.0"
  auto_upgrade_minor_version = "true"
  settings = <<SETTINGS
    {
      "workspaceId": "${azurerm_log_analytics_workspace.avd_log-analytics.workspace_id}"
    }
SETTINGS
   protected_settings = <<PROTECTED_SETTINGS
   {
      "workspaceKey": "${azurerm_log_analytics_workspace.avd_log-analytics.primary_shared_key}"
   }
PROTECTED_SETTINGS

  depends_on = [
    azurerm_virtual_machine_extension.domain_join,
    azurerm_virtual_desktop_host_pool.avd_std_hostpool,
    azurerm_log_analytics_workspace.avd_log-analytics
  ]
}